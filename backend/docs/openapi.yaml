openapi: 3.0.0
info:
  title: Melodex Online Store API
  version: 1.0.0
  description: API for managing products, categories, orders, and user ratings

servers:
  - url: /api
    description: API base URL

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        UserID:
          type: integer
        Name:
          type: string
        Email:
          type: string
        DateOfBirth:
          type: string
          format: date
        Address:
          type: string
        Phone:
          type: string
        DateOfJoin:
          type: string
          format: date

    Product:
      type: object
      properties:
        ProductID:
          type: integer
        Name:
          type: string
        Rating:
          type: number
        Price:
          type: number
        Brand:
          type: string
        Description:
          type: string
        Stock:
          type: integer
        CategoryID:
          type: integer
        ImageURL:
          type: string

    Category:
      type: object
      properties:
        CategoryID:
          type: integer
        CategoryName:
          type: string
        ParentCategoryID:
          type: integer

    Order:
      type: object
      properties:
        OrderID:
          type: integer
        UserID:
          type: integer
        OrderDate:
          type: string
          format: date
        TotalAmount:
          type: number

    Rating:
      type: object
      properties:
        RatingID:
          type: integer
        UserID:
          type: integer
        ProductID:
          type: integer
        RatingValue:
          type: integer
          minimum: 1
          maximum: 5

paths:
  /users/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  type: string
                Email:
                  type: string
                Password:
                  type: string
                DateOfBirth:
                  type: string
                  format: date
                Address:
                  type: string
                Phone:
                  type: string
      responses:
        '200':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/login:
    post:
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'

  /products:
    get:
      summary: Get all products
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

  /products/{id}:
    get:
      summary: Get product by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

  /products/category/{id}:
    get:
      summary: Get products by category
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of products in category
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

  /products/search:
    get:
      summary: Search products
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

  /categories:
    get:
      summary: Get category hierarchy
      responses:
        '200':
          description: Category hierarchy
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'

  /categories/{id}:
    get:
      summary: Get category by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Category details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'

  /orders:
    post:
      summary: Create new order
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      ProductID:
                        type: integer
                      Quantity:
                        type: integer
      responses:
        '200':
          description: Order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'

    get:
      summary: Get user's orders
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'

  /orders/{id}:
    get:
      summary: Get order details
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Order details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'

  /ratings:
    post:
      summary: Create new rating
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ProductID:
                  type: integer
                RatingValue:
                  type: integer
                  minimum: 1
                  maximum: 5
      responses:
        '200':
          description: Rating created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'

  /products/{id}/ratings:
    get:
      summary: Get product ratings
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of ratings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rating' 